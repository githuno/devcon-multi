x-environments:
  # go -------------------------------------------------------------------------
  x-1: &go
    container_name: ${BE_REPO}
    env_file: # ".env"以外のファイル名では参照しない。また環境ごとに別で配置したenvファイルを各々で読み込みもできなかった。
      - .env
    build:
      context: ../
      dockerfile: ./.devcontainer/${BE_REPO}/Dockerfile
      args:
        COMPOSE_PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
        USERNAME: ${USERNAME}
        BE_REPO: ${BE_REPO}
    volumes:
      - ../${BE_REPO}/:/workspaces/${COMPOSE_PROJECT_NAME}:cached
      - $HOME/.ssh:/home/${USERNAME}/.ssh:ro
      # -----------------------------
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /run/user/1000/pulse/native:/tmp/pulse/native
      - /home/${USERNAME}/.config/pulse/cookie:/tmp/pulse/cookie:ro
      - /var/lib/dbus:/var/lib/dbus
      - /var/run/dbus:/var/run/dbus
      - /etc/machine-id:/etc/machine-id
    environment:
      # -----------------------------
      - DISPLAY=:0
      - WAYLAND_DISPLAY=wayland-0
      - PULSE_COOKIE=/tmp/pulse/cookie
      - PULSE_SERVER=unix:/tmp/pulse/native
      - NOVNC_PORT=8085
      - VNC_PORT=5900
      - QEMU_OPTS=-vnc :0 --usbdevice tablet
    devices:
      # -----------------------------
      - /dev/dri:/dev/dri
      - /dev/snd:/dev/snd
      - /dev/input:/dev/input
    privileged: true
    cap_add:
      - SYS_PTRACE
    init: true
    labels:
      - devcontainer.local_folder=../${BE_REPO}
      - devcontainer.config_file=./${BE_REPO}/devcontainer.json
    entrypoint: ["/home/set_uid.sh"]
    command:
      [
        "/bin/sh",
        "-c",
        'echo Container started ; trap "exit 0" 15; while sleep 1 & wait $!; do :; done',
      ]
    ports:
      - ${BE_PORT}:${BE_PORT}
    networks:
      - app_net
  # next -----------------------------------------------------------------------
  x-2: &next
    container_name: ${FE_REPO}
    env_file: # ".env"以外のファイル名では参照しない。また環境ごとに別で配置したenvファイルを各々で読み込みもできなかった。
      - .env
    build:
      context: ../
      dockerfile: ./.devcontainer/${FE_REPO}/Dockerfile
      args: # ビルド時に使用する変数（in Dockerfile）
        COMPOSE_PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
        OS_VER: ${OS_VER}
        NODE_VER: ${NODE_VER}
        NVM_DIR: /home/${LOCALUNAME}/.nvm
        REPO_NAME: ${FE_REPO}
        LOCALUNAME: ${LOCALUNAME}
        LOCALUPASS: ${LOCALUPASS}
    environment:
      TS_ACCEPT_DNS: true
    entrypoint: >
      entrypoint.sh
    command: ["dumb-init", "/bin/sh"]
    volumes:
      - ../${FE_REPO}/:/workspaces/${COMPOSE_PROJECT_NAME}:cached
      - $HOME/.ssh:/home/${LOCALUNAME}/.ssh:ro
    labels:
      - devcontainer.local_folder=../${FE_REPO}
      - devcontainer.config_file=./frontend/devcontainer.json
    cap_add:
      - SYS_ADMIN
    tty: true
    ports:
      - ${FE_PORT}:${FE_PORT}
      - ${PORT_CODE}:${PORT_CODE}
    networks:
      - app_net
  # nginx ----------------------------------------------------------------------
  x-3: &nginx
    container_name: ${PROXY_REPO}
    build:
      context: ../
      dockerfile: ./.devcontainer/${PROXY_REPO}/Dockerfile
      args:
        PROXY_REPO: ${PROXY_REPO}
        FE_REPO: ${FE_REPO}
        FE_PORT: ${FE_PORT}
        BE_REPO: ${BE_REPO}
        BE_PORT: ${BE_PORT}
    entrypoint: >
      tini -- entrypoint.sh
    volumes:
      - ../${PROXY_REPO}/log:/var/log/nginx
    ports:
      - ${PX_PORT}:80
    networks:
      - app_net
# ---------------------------------------"docker compose config"コマンドで確認可能
services:
  proxy:
    <<: *nginx
    depends_on:
      - frontend
      - backend
  backend:
    <<: *go
  frontend:
    <<: *next
networks:
  app_net:
    driver: bridge
